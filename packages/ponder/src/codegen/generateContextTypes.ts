import { writeFileSync } from "node:fs";
import path from "node:path";

import { logger } from "@/common/logger";
import { OPTIONS } from "@/common/options";
import { formatPrettier } from "@/common/utils";
import { Source, SourceKind } from "@/sources/base";

const header = `
/* Autogenerated file. Do not edit manually. */
`;

export const generateContextTypes = (sources: Source[]) => {
  const contractNames = sources
    .filter((source) => source.kind === SourceKind.EVM)
    .map((source) => source.name);

  const imports = `import type { ${contractNames.join(
    ", "
  )} } from "./typechain";`;

  const contractTypes = contractNames
    .map((contractName) => `${contractName}: ${contractName};`)
    .join("");

  // TODO: Add reference here to plugin-defined types

  const body = `

  export type Context = {
    contracts: {
      ${contractTypes}
    }
  }
  `;

  const final = formatPrettier(header + imports + body);

  writeFileSync(
    path.join(OPTIONS.GENERATED_DIR_PATH, "context.d.ts"),
    final,
    "utf8"
  );

  logger.debug(`Generated context.d.ts file`);
};
