"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Registry__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "AccountAlreadyRegistered",
        type: "error",
    },
    {
        inputs: [],
        name: "AccountNotRegistered",
        type: "error",
    },
    {
        inputs: [],
        name: "BurnerAccountAlreadyRegistered",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectRegistrationFee",
        type: "error",
    },
    {
        inputs: [],
        name: "RegistrationNotActive",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "burnerAccount",
                type: "address",
            },
        ],
        name: "NewRegistration",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "burnerAccount",
                type: "address",
            },
        ],
        name: "UpdatedRegistration",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "accounts",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "burnerAccounts",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "isActive",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "burnerAccount",
                type: "address",
            },
        ],
        name: "register",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "registrationFee",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_isActive",
                type: "bool",
            },
        ],
        name: "setIsActive",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_registrationFee",
                type: "uint256",
            },
        ],
        name: "setRegistrationFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "burnerAccount",
                type: "address",
            },
        ],
        name: "updateBurnerAccount",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "withdrawTo",
                type: "address",
            },
        ],
        name: "withdrawAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "withdrawTo",
                type: "address",
            },
            {
                internalType: "contract IERC20",
                name: "erc20Token",
                type: "address",
            },
        ],
        name: "withdrawAllERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040526000805460ff60a01b1916600160a01b17905567016345785d8a000060015534801561002f57600080fd5b506100393361003e565b61008e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108908061009d6000396000f3fe6080604052600436106100c25760003560e01c806387f522711161007f578063c320c72711610059578063c320c72714610217578063c34d97d114610237578063f2fde38b1461026d578063fa09e6301461028d57600080fd5b806387f52271146101b95780638da5cb5b146101d9578063ae11c7f8146101f757600080fd5b806314c44e09146100c757806322f3e2d4146100f05780632750fc78146101215780634420e486146101435780635e5c06e214610156578063715018a6146101a4575b600080fd5b3480156100d357600080fd5b506100dd60015481565b6040519081526020015b60405180910390f35b3480156100fc57600080fd5b5060005461011190600160a01b900460ff1681565b60405190151581526020016100e7565b34801561012d57600080fd5b5061014161013c3660046107a5565b6102ad565b005b6101416101513660046107de565b6102d3565b34801561016257600080fd5b5061018c6101713660046107de565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b3480156101b057600080fd5b5061014161040e565b3480156101c557600080fd5b506101416101d43660046107de565b610422565b3480156101e557600080fd5b506000546001600160a01b031661018c565b34801561020357600080fd5b506101416102123660046107fb565b610533565b34801561022357600080fd5b50610141610232366004610834565b610621565b34801561024357600080fd5b5061018c6102523660046107de565b6003602052600090815260409020546001600160a01b031681565b34801561027957600080fd5b506101416102883660046107de565b61062e565b34801561029957600080fd5b506101416102a83660046107de565b6106ac565b6102b56106ed565b60008054911515600160a01b0260ff60a01b19909216919091179055565b600054600160a01b900460ff166102fd5760405163de326de960e01b815260040160405180910390fd5b6001600160a01b0381811660009081526002602052604090205416156103365760405163016ef4d560e31b815260040160405180910390fd5b336000908152600360205260409020546001600160a01b03161561036d5760405163cff2d5ad60e01b815260040160405180910390fd5b600154341461038f57604051632c17032b60e01b815260040160405180910390fd5b6001600160a01b03811660008181526002602090815260408083208054336001600160a01b031991821681179092558185526003845293829020805490941685179093558051928352908201929092527f06367b7de587a22d8353e5bdeff313d9f6c03cf8654873928f9046b1ffb115f591015b60405180910390a150565b6104166106ed565b6104206000610747565b565b600054600160a01b900460ff1661044c5760405163de326de960e01b815260040160405180910390fd5b6001600160a01b0381811660009081526002602052604090205416156104855760405163016ef4d560e31b815260040160405180910390fd5b336000908152600360205260409020546001600160a01b03166104bb57604051639704dd5160e01b815260040160405180910390fd5b6001600160a01b03811660008181526002602090815260408083208054336001600160a01b031991821681179092558185526003845293829020805490941685179093558051928352908201929092527f736dcc646d355597ebba6854aa0be37eb156b6fa0969a7da664ea1126ca745729101610403565b61053b6106ed565b6040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb90849083906370a0823190602401602060405180830381865afa158015610589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ad919061084d565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156105f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061c9190610866565b505050565b6106296106ed565b600155565b6106366106ed565b6001600160a01b0381166106a05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6106a981610747565b50565b6106b46106ed565b6040516001600160a01b038216904780156108fc02916000818181858888f193505050501580156106e9573d6000803e3d6000fd5b5050565b6000546001600160a01b031633146104205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610697565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80151581146106a957600080fd5b6000602082840312156107b757600080fd5b81356107c281610797565b9392505050565b6001600160a01b03811681146106a957600080fd5b6000602082840312156107f057600080fd5b81356107c2816107c9565b6000806040838503121561080e57600080fd5b8235610819816107c9565b91506020830135610829816107c9565b809150509250929050565b60006020828403121561084657600080fd5b5035919050565b60006020828403121561085f57600080fd5b5051919050565b60006020828403121561087857600080fd5b81516107c28161079756fea164736f6c634300080d000a";
const isSuperArgs = (xs) => xs.length > 1;
class Registry__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Registry__factory = Registry__factory;
Registry__factory.bytecode = _bytecode;
Registry__factory.abi = _abi;
