"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegistryReceiverV0__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "burnerAccount",
                type: "address",
            },
        ],
        name: "NewRegistration",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "burnerAccount",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "previousBurnerAccount",
                type: "address",
            },
        ],
        name: "UpdatedRegistration",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "accounts",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "burnerAccounts",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "burnerAccount",
                type: "address",
            },
        ],
        name: "isRegistered",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "address",
                name: "burnerAccount",
                type: "address",
            },
        ],
        name: "submitRegistration",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104328061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c34d97d11161005b578063c34d97d1146100e3578063c3c5a5471461010c578063f2fde38b1461014a578063fbc0a59c1461015d57600080fd5b80635e5c06e214610082578063715018a6146100c85780638da5cb5b146100d2575b600080fd5b6100ab6100903660046103d0565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d0610170565b005b6000546001600160a01b03166100ab565b6100ab6100f13660046103d0565b6002602052600090815260409020546001600160a01b031681565b61013a61011a3660046103d0565b6001600160a01b0390811660009081526001602052604090205416151590565b60405190151581526020016100bf565b6100d06101583660046103d0565b610184565b6100d061016b3660046103f2565b610202565b61017861030a565b6101826000610364565b565b61018c61030a565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101ff81610364565b50565b61020a61030a565b6001600160a01b0380831660009081526002602052604090205416801561027b57604080516001600160a01b038581168252848116602083015283168183015290517f31e9efb2582d9bd5cfe3795bda64d653b0908721e3ecfcae729dd6b1e193dba39181900360600190a16102bf565b604080516001600160a01b038086168252841660208201527f06367b7de587a22d8353e5bdeff313d9f6c03cf8654873928f9046b1ffb115f5910160405180910390a15b506001600160a01b0390811660008181526001602090815260408083208054959096166001600160a01b03199586168117909655948252600290529290922080549091169091179055565b6000546001600160a01b031633146101825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ed565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146103cb57600080fd5b919050565b6000602082840312156103e257600080fd5b6103eb826103b4565b9392505050565b6000806040838503121561040557600080fd5b61040e836103b4565b915061041c602084016103b4565b9050925092905056fea164736f6c634300080d000a";
const isSuperArgs = (xs) => xs.length > 1;
class RegistryReceiverV0__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.RegistryReceiverV0__factory = RegistryReceiverV0__factory;
RegistryReceiverV0__factory.bytecode = _bytecode;
RegistryReceiverV0__factory.abi = _abi;
